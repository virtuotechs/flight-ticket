{"version":3,"file":"static/webpack/static\\development\\pages\\ticketBooking.js.ddda2eafeaa440b518c0.hot-update.js","sources":["webpack:///./pages/ticketBooking.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport Layout from '../components/layout';\r\nimport { Row, Col, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport sortJsonArray from 'sort-json-array';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport dateFormat from 'dateformat';\r\nimport getSymbolFromCurrency from 'currency-symbol-map'\r\nimport datetimeDifference from \"datetime-difference\";\r\nimport 'isomorphic-fetch';\r\nimport {getFlights} from '../api';\r\nimport Router from 'next/router';\r\nimport moment from 'moment';\r\nimport NumericInput from 'react-numeric-input';\r\n\r\n//Auto complete imports\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\n\r\n// Auto complete\r\nconst languages = require('../data/countries.json');\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\nfunction getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n    \r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n    if(value.length <= 3)\r\n\t{\r\n\t\tconst regex = new RegExp('^' + escapedValue, 'i');\r\n\t\treturn languages.filter(language => regex.test(language.PlaceId));\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconst regex = new RegExp('^' + escapedValue, 'i');\r\n\t\treturn languages.filter(language => regex.test(language.CityName));\r\n\t}\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.CityName} - ${suggestion.PlaceName} (${suggestion.PlaceId})`;\r\n  }\r\n  \r\n  function renderSuggestion(suggestion, { query }) {\r\n\tconst suggestionText = `${suggestion.CityName} - ${suggestion.PlaceName} (${suggestion.PlaceId})`;\r\n\tconst suggestionCountry = `${suggestion.CountryId}`;\r\n\tconst matches = AutosuggestHighlightMatch(suggestionText,query);\r\n\tconst parts = AutosuggestHighlightParse(suggestionText, matches);\r\n\treturn (\r\n\t\t<span className={'suggestion-content ' + suggestion.twitter}>\r\n\t\t  <span className=\"autocomplete-name\">\r\n\t\t  <img className='fa fa-fighter-jet autocomplete-flight-img' alt=\"Flight\" src='static/images/flight.png' width='25px'></img>\r\n\t\t\t{\r\n\t\t\t  parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'highlight' : null;\r\n\t\r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>{part.text}</span>\r\n\t\t\t\t);\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t\t<br/><small className=\"country-name\">{suggestionCountry}</small>\r\n\t\t  </span>\r\n\t\t</span>\r\n\t  );\r\n  }\r\n  \r\n  class MyAutosuggest extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: this.props.value,\r\n        suggestions: []\r\n      };    \r\n    }\r\n  \r\n    onChange = (_, { newValue }) => {\r\n      const { id, onChange } = this.props;\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n      \r\n      onChange(id, newValue);\r\n    };\r\n    \r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n    onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { id, placeholder } = this.props;\r\n\t  const { value, suggestions } = this.state || this.props;\r\n      const inputProps = {\r\n        placeholder,\r\n        value,\r\n        onChange: this.onChange\r\n      };\r\n      \r\n      return (\t\t\r\n        <Autosuggest\r\n          id={id}\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps} \r\n        /> \r\n      );\r\n    }\r\n  }\r\n\r\nconst TicketBooking = (flights) => {\r\n\r\n            const changeMonthDate = (dt) => {\r\n                var date1 = dt.split('-')\r\n                var newDate = date1[1] + '-' + date1[0] + '-' + date1[2];\r\n                var date = new Date(newDate);\r\n                return (date);\r\n            }\r\n            const node = React.createRef();\r\n            // State initialisation\r\n            const [requestData,setRequestData] = useState(flights.request);\r\n            const [jsondata,setJsondata] = useState(flights.flights.data.recommendation);     \r\n            const [flightData,setFlightData] = useState(flights.flights.data.recommendation);  \r\n            const [popup,setPopup] = useState(false);\r\n            const [fullDrop,setFullDrop] = useState(false);\r\n            const [searchType,setSearchtype] = useState(requestData.searchType);\r\n            const [isDirectFlight,setDirectflight] = useState(requestData.isDirectFlight);\r\n            const [departureLocationCode,setDeparturelocationcode] = useState(requestData.segments[0].departureLocationCode)\r\n            const [arrivalLocationCode,setArrivallocationcode] = useState(requestData.segments[0].arrivalLocationCode);\r\n            const [departureLocationName,setDepartureLocationName]= useState(requestData.departureLocationName);\r\n            const [arrivalLocationName,setArrivalLocationName] = useState(requestData.arrivalLocationName);\r\n            const [preferedFlightClass,setPreferedflightclass] = useState(requestData.preferedFlightClass);\r\n            const [departureDate,setDeparturedate] = useState(changeMonthDate(requestData.segments[0].departureDate));\r\n            const [returnDate,setReturndate] = searchType == 2 ? useState(changeMonthDate(requestData.segments[0].returnDate)) : useState(null);\r\n            const [adultCount,setAdultcount] = useState(requestData.adultCount);\r\n            const [childCount,setchildCount] = useState(requestData.childCount);\r\n            const [departure_err,setDeparture_err] = useState(false);\r\n            const [arrival_err,setArrival_err] = useState(false);\r\n            const [adults_err,setAdults_err] = useState(false);\r\n            const [child_err,setChild_err] = useState(false);\r\n            const [departureDate_err,setDeparturedate_err] = useState(false);\r\n            const [returnDate_err,setReturndate_err] = useState(false);\r\n            \r\n            const [sortToggler,setSortToggler]=useState(false);\r\n            const [filterToggler,setFilterToggler]=useState(false);\r\n            const [sortOption,setSortOption]=useState('Best');\r\n            const [fetchLoading,setFetchLoading] = useState(false);\r\n            const [fetchLoading1,setFetchLoading1] = useState(false);\r\n            const [localLoading,setLocalLoading] = useState(false);\r\n\r\n            var check_nonstop = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '0').length : 0;\r\n            const [nonstop,setnonstop] = check_nonstop>0 ? useState(true) : useState(false);\r\n            var check_onestop = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '1').length : 0;\r\n            const [onestop,setonestop] = check_onestop>0 ? useState(true) : useState(false);\r\n            var check_twostop = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '2').length: 0;\r\n            const [twostop,settwostop] = check_twostop>0 ? useState(true) : useState(false);\r\n            var check_departure1 = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 600 && x.flightLeg[0].flightDetails.departureTime <= 1200).length: 0;\r\n            const [departure1,setdeparture1] = check_departure1>0 ? useState(true) : useState(false);\r\n            var check_departure2 = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 1800).length : 0;\r\n            const [departure2,setdeparture2] = check_departure2>0 ? useState(true) : useState(false);\r\n            var check_departure3 = jsondata!= undefined ? jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 1200 && x.flightLeg[0].flightDetails.departureTime <= 1800).length : 0;\r\n            const [departure3,setdeparture3] = check_departure3>0 ? useState(true) : useState(false);            \r\n            var check_return1 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 600 && x.flightLeg[0].flightDetails.departureTime <= 1200).length) : null):0;\r\n            const [return1,setreturn1] = check_return1>0 ? useState(true) : useState(false);\r\n            var check_return2 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 1800).length) : null) : 0;\r\n            const [return2,setreturn2] = check_return2>0 ? useState(true) : useState(false);\r\n            var check_return3 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 1200 && x.flightLeg[0].flightDetails.departureTime <= 1800).length) : null ) : 0;\r\n            const [return3,setreturn3] = check_return3>0 ? useState(true) : useState(false);\r\n            \r\n            const [flightId,setFlightId] = useState('');\r\n            const [airlineName,setAirlineName] = useState('');\r\n            const [airlinesCheck,setAirlinesCheck] = useState(true);\r\n\r\n            console.log(jsondata);\r\n\r\n            const handleChange = (date) => {\r\n                setDepartureDate(date);\r\n                setReturnDate(date);\r\n            }\r\n            \r\n            const handleChange1 = (date) => {\r\n                setReturnDate(date);\r\n            }\r\n\r\n            const changePlace = () => {\r\n                setDepartureLocationName(arrivalLocationName);\r\n                setArrivalLocationName(departureLocationName);\r\n            }\r\n            const TimeSplit = (time) => {\r\n                time = time.replace(/(..?)/g, '$1:').slice(0, -1)\r\n                return (time);\r\n            }\r\n\r\n            const handlesortToggler = () => {\r\n                setSortToggler(true);\r\n                setFilterToggler(false);\r\n            }\r\n\r\n            const handleFilterToggler = () => {\r\n                setFilterToggler(true);\r\n                setSortToggler(false);\r\n            }\r\n\r\n            const handleScrollToElement = (event) => {        \r\n                $(window).scroll(function () {\r\n                    var sticky = $('.filtering-row.row'),\r\n                        scroll = $(window).scrollTop();\r\n\r\n                    if (scroll >= 400) sticky.addClass('fixed');\r\n                    else sticky.removeClass('fixed');\r\n                });\r\n            }\r\n\r\n            const StopName = (stop) => {\r\n                if(stop == 0)\r\n                {\r\n                    return \"Non-stop\";\r\n                }\r\n                else if(stop == 1)  \r\n                {\r\n                    return \"1 stop\";\r\n                }\r\n                else if(stop == 2)\r\n                {\r\n                    return \"2 stops\";\r\n                }\r\n            }\r\n            const StopClassName = (stop) => {\r\n                if(stop == 1)  \r\n                {\r\n                    return \"onestop\";\r\n                }\r\n                else if(stop == 2)\r\n                {\r\n                    return \"twostop\";\r\n                }\r\n            }\r\n            const CalculateDuration = (duration) => {\r\n                duration = TimeSplit(duration);\r\n                var duration1 = duration.split(\":\");\r\n                var duration_str = duration1[0]+\"h \"+duration1[1]+\"m\";\r\n                return duration_str;\r\n            }\r\n\r\n            const ViaCityName = (cityname) => {\r\n                cityname = cityname.split(\"(\");\r\n                return cityname[0];\r\n            }\r\n        const fastestDuration = () =>\r\n        {\r\n            var fastest_duration = Math.min.apply(Math,flightData.map(function (o) { return o.flightLeg[0].flightDetails.totalFlyingHours; }))\r\n            fastest_duration = fastest_duration.toString();\r\n            if(fastest_duration.length <=3)\r\n            {\r\n                fastest_duration = \"0\"+fastest_duration;\r\n            }\r\n            return CalculateDuration(fastest_duration);\r\n        }\r\n        const fastestPrice = () =>\r\n        {\r\n            var fastest_duration = Math.min.apply(Math,flightData.map(function (o) { return o.flightLeg[0].flightDetails.totalFlyingHours; })) \r\n            var fastest_price =  flightData.filter(function(price) { return price.flightLeg[0].flightDetails.totalFlyingHours == fastest_duration});\r\n            fastest_price = fastest_price[0].totalFare;\r\n            return fastest_price;\r\n        }\r\n        const cheapestDuration = () =>\r\n        {\r\n            var cheapest_price = Math.min.apply(Math,flightData.map(function (o) { return o.totalFare;}))\r\n            var cheapest_duration =  flightData.filter(function(price) { return price.totalFare == cheapest_price});\r\n            cheapest_duration = cheapest_duration[0].flightLeg[0].flightDetails.totalFlyingHours;\r\n            return CalculateDuration(cheapest_duration);\r\n        }\r\n        const cheapestPrice = () =>\r\n        {\r\n            var cheapest_price = Math.min.apply(Math,flightData.map(function (o) { return o.totalFare;}))\r\n            return cheapest_price;\r\n        }\r\n        const bestDuration = () =>\r\n        {\r\n        var best_price = flightData.sort(function(obj1, obj2) {\r\n            return obj1.totalFare - obj2.totalFare && obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n        });\r\n        return CalculateDuration(best_price[0].flightLeg[0].flightDetails.totalFlyingHours);\r\n        }\r\n        const bestPrice = () =>\r\n        {\r\n        var best_price = flightData.sort(function(obj1, obj2) {\r\n            return obj1.totalFare - obj2.totalFare && obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n        });\r\n        return best_price[0].totalFare;\r\n        }\r\n        useEffect(() => {\r\n                window.addEventListener('scroll', handleScrollToElement);\r\n            });\r\n        const uniqueAirlines = () => {\r\n            const categories = flightData!= undefined ? [...new Set(flightData.map(newdata => newdata.marketingAirlineNames))] : null;\r\n            return categories;\r\n        }\r\n        const showFlightDetails = (id) =>\r\n        {\r\n            setFlightId(id);\r\n            setFetchLoading1(true);\r\n            Router.push({\r\n\t\t\t\tpathname: '/ticketdetails',\r\n\t\t\t\tquery: {\r\n                    \"id\":id,\r\n\t\t\t\t\t\"adultCount\": requestData.adultCount,\r\n\t\t\t\t\t\"childCount\": requestData.childCount,\r\n\t\t\t\t\t\"infantCount\": requestData.infantCount,\r\n\t\t\t\t\t\"isDirectFlight\": requestData.isDirectFlight,\r\n\t\t\t\t\t\"isPlusOrMinus3Days\": requestData.isPlusOrMinus3Days,\r\n\t\t\t\t\t\"searchType\": searchType,\r\n\t\t\t\t\t\"preferedFlightClass\": requestData.preferedFlightClass,\r\n\t\t\t\t\t\"departureLocationCode\": requestData.segments[0].departureLocationCode,\r\n\t\t\t\t\t\"departureDate\": requestData.segments[0].departureDate,\r\n\t\t\t\t\t\"arrivalLocationCode\": requestData.segments[0].arrivalLocationCode,\r\n\t\t\t\t\t\"returnDate\": requestData.searchType == 2 ? requestData.segments[0].returnDate: null,\r\n\t\t\t\t\t\"departureTime\": requestData.segments[0].departureTime,\r\n\t\t\t\t\t\"returnTime\": requestData.searchType == 2 ? requestData.segments[0].returnTime : 0,\r\n\t\t\t\t\t\"PageIndex\": \"1\",\r\n\t\t\t\t\t\"PageSize\": \"50\",\r\n\t\t\t\t\t\"departureLocationName\": requestData.departureLocationName,\r\n\t\t\t\t\t\"arrivalLocationName\": requestData.arrivalLocationName\r\n\t\t\t\t\t}\r\n\t\t\t\t}) \t\r\n        }\r\n        \r\n        const handleSortOptions = (e) => {\r\n            setSortOption(e.target.value);\r\n            if(e.target.value == \"Best\")\r\n            {   \r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function(obj1, obj2) {\r\n                         return obj1.totalFare - obj2.totalFare && obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n                     });\r\n                    setJsondata(new_array);\r\n                    setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            else if(e.target.value == \"Cheapest First\")\r\n            {\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                        const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                         return obj1.totalFare - obj2.totalFare;\r\n                         });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            else if(e.target.value == \"Fastest First\")\r\n            {\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                    return obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n                    });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            else if(e.target.value == \"Outbound: Departure Time\")\r\n            {\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                    return obj1.flightLeg[0].flightDetails.departureTime - obj2.flightLeg[0].flightDetails.departureTime;\r\n                });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            else if(e.target.value == \"Airline\")\r\n            {\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                const new_array = sortJsonArray([...jsondata], \"marketingAirlineNames\", \"asc\");\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            else if(e.target.value == \"Stops\")\r\n            {\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                    return obj1.flightLeg[0].flightDetails.stopOvers - obj2.flightLeg[0].flightDetails.stopOvers;\r\n                });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n        }\r\n            const handleSortBest = () => {\r\n                setSortOption(\"Best\");\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function(obj1, obj2) {\r\n                         return obj1.totalFare - obj2.totalFare && obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n                     });\r\n                    setJsondata(new_array);\r\n                    setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            const handleSortCheapest = () => {\r\n                setSortOption(\"Cheapest First\");\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                        const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                         return obj1.totalFare - obj2.totalFare;\r\n                         });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n            }\r\n            const handleSortFastest = () => {\r\n                setSortOption(\"Fastest First\");\r\n                setLocalLoading(true);\r\n                setTimeout(() => {\r\n                    const new_array = [...jsondata].sort(function (obj1, obj2) {\r\n                    return obj1.flightLeg[0].flightDetails.totalFlyingHours - obj2.flightLeg[0].flightDetails.totalFlyingHours;\r\n                    });\r\n                setJsondata(new_array);\r\n                setLocalLoading(false);\r\n                },1000);\r\n               \r\n            }\r\n            const filtercname = (text) => {\r\n                var filter_text = text.trim();\r\n                filter_text = filter_text.split(\"-\");\r\n                return filter_text[0];\r\n            }\r\n            const preferedclassname = (classname) => {\r\n                if(classname == \"1\")\r\n                {\r\n                    return \"Any\";\r\n                }\r\n                else if(classname == \"2\")\r\n                {\r\n                    return \"Business\";\r\n                }\r\n                else if(classname == \"3\")\r\n                {\r\n                    return \"Economy\";\r\n                }\r\n                else if(classname == \"4\")\r\n                {\r\n                    return \"First Class\";\r\n                }\r\n                else if(classname == \"5\")\r\n                {\r\n                    return \"PremiumOrEconomy\";\r\n                }\r\n                else if(classname == \"6\")\r\n                {\r\n                    return \"PremiumAndEconomy\";\r\n                }\r\n            }\r\n            const changeSearchType = (e) => {\r\n                setSearchType(e.target.value);\r\n                setReturnDate(departureDate);\r\n                console.log(searchType);\r\n            }\r\n            async function filterAirline(airname){\r\n                console.log(airname);\r\n                setAirlineName(airname);\r\n                setAirlinesCheck(!airlinesCheck);\r\n                if(airlineName=='')\r\n                {\r\n                    setLocalLoading(true);\r\n                    var response = await getFlights(requestData);\r\n                    var airways_flights = await response;\r\n                    setLocalLoading(false);\r\n                    airways_flights = airways_flights.data.recommendation.filter(item => item.marketingAirlineNames != airname)\r\n                    setJsondata(airways_flights);\r\n                }\r\n                else\r\n                {\r\n                    setLocalLoading(true);\r\n                    var response = await getFlights(requestData);\r\n                    var airways_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(airways_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filternonstop() {\r\n                setLocalLoading(true);\r\n                setnonstop(!nonstop);\r\n                if(nonstop)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var nonstop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    nonstop_flights = nonstop_flights.data.recommendation.filter(item => item.flightLeg[0].flightDetails.stopOvers != '0' )\r\n                    setJsondata(nonstop_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var nonstop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(nonstop_flights.data.recommendation);\r\n                }\r\n            }\r\n\r\n            async function filteronestop(){\r\n                setLocalLoading(true);\r\n                setonestop(!onestop);\r\n                if(onestop)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var onestop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    onestop_flights = onestop_flights.data.recommendation.filter(item => item.flightLeg[0].flightDetails.stopOvers != '1' )\r\n                    setJsondata(onestop_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var onestop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(onestop_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filtertwostop(){\r\n                setLocalLoading(true);\r\n                settwostop(!twostop);\r\n                if(twostop)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var twostop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    twostop_flights = twostop_flights.data.recommendation.filter(item => item.flightLeg[0].flightDetails.stopOvers != '2' )                \r\n                    setJsondata(twostop_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var twostop_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(twostop_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterdeparture1(){\r\n                setLocalLoading(true);\r\n                setdeparture1(!departure1);\r\n                if(departure1)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure1_flights = await response;\r\n                    setLocalLoading(false);\r\n                    departure1_flights = departure1_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[0].flightDetails.departureTime) >= 600 && parseInt(item.flightLeg[0].flightDetails.departureTime) <= 1200));\r\n                    setJsondata(departure1_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure1_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(departure1_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterdeparture2(){\r\n                setLocalLoading(true);\r\n                setdeparture2(!departure2);\r\n                if(departure2)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure2_flights = await response;\r\n                    setLocalLoading(false);\r\n                    departure2_flights = departure2_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[0].flightDetails.departureTime) >= 1800));\r\n                    setJsondata(departure2_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure2_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(departure2_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterdeparture3(){\r\n                setLocalLoading(true);\r\n                setdeparture3(!departure3);\r\n                if(departure3)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure3_flights = await response;\r\n                    setLocalLoading(false);\r\n                    departure3_flights = departure3_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[0].flightDetails.departureTime) >= 1200 && parseInt(item.flightLeg[0].flightDetails.departureTime) <= 1800));\r\n                    setJsondata(departure3_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var departure3_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(departure3_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterreturn1(){\r\n                setLocalLoading(true);\r\n                setreturn1(!return1);\r\n                if(return1)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return1_flights = await response;\r\n                    setLocalLoading(false);\r\n                    return1_flights = return1_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[1].flightDetails.departureTime) >= 600 && parseInt(item.flightLeg[1].flightDetails.departureTime) <= 1200));\r\n                    setJsondata(return1_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return1_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(return1_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterreturn2(){\r\n                setLocalLoading(true);\r\n                setreturn2(!return2);\r\n                if(return2)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return2_flights = await response;\r\n                    setLocalLoading(false);\r\n                    return2_flights = return2_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[1].flightDetails.departureTime) >= 1800));\r\n                    setJsondata(return2_flights);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return2_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(return2_flights.data.recommendation);\r\n                }\r\n            }\r\n            async function filterreturn3(){\r\n                setLocalLoading(true);\r\n                setreturn3(!return3);\r\n                if(return3)\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return3_flights = await response;\r\n                    setLocalLoading(false);\r\n                    return3_flights = return3_flights.data.recommendation.filter(item => !(parseInt(item.flightLeg[1].flightDetails.departureTime) >= 1200 && parseInt(item.flightLeg[1].flightDetails.departureTime) <= 1800));\r\n                    setJsondata(return3_flights.data.recommendation);\r\n                }\r\n                else\r\n                {\r\n                    var response = await getFlights(requestData);\r\n                    var return3_flights = await response;\r\n                    setLocalLoading(false);\r\n                    setJsondata(return3_flights);\r\n                }\r\n            }\r\n            const handleRadio = (e) => {\r\n                console.log(e.target.value);\r\n                setSearchtype(e.target.value);\r\n            }\r\n            const handleendChange = (date) => {\r\n                setReturndate(date);\r\n            }\r\n            \r\n            const handlestartChange = (date) => {\r\n                setDeparturedate(date);\r\n                setReturndate(date);\r\n            }\r\n        \r\n            const changedirectFlight = () => {\r\n                setDirectflight(!isDirectFlight);\r\n            }\r\n        \r\n            const changeClass = (e) => {\r\n                setPreferedflightclass(e.target.value);\t\t\r\n            }\r\n        \r\n            const adultChanged = (e) =>{\r\n                if(e<=9)\r\n                {\r\n                    setAdults_err(false);\r\n                    setAdultcount(e);\r\n                }\r\n                else\r\n                {\r\n                    setAdults_err(true);\r\n                    setAdultcount(1);\r\n                }\r\n            }\r\n        \r\n            const childChanged = (e) =>{\r\n                if(e<=9)\r\n                {\r\n                    setChild_err(false);\r\n                    setchildCount(e);\r\n                }\r\n                else\r\n                {\r\n                    setChild_err(true);\r\n                    setchildCount(0);\r\n                }\r\n            }\r\n          \r\n            //   Dropdown\r\n                useEffect(() => {\r\n                    document.addEventListener(\"click\", handleOutsideClick);\r\n                    document.removeEventListener(\"click\", handleOutsideClick);\r\n                })\r\n                const handlepopup = () => \r\n                {\r\n                    setPopup(!popup);\r\n                }\r\n                const handleOutsideClick = (e) => \r\n                {\r\n                        if (node.current && node.current.contains(event.target)) {\r\n                        setPopup(false);\r\n                    }\r\n                }\r\n            const onChangeLocation = (id, suggestion,value) => {                \r\n                if(id==\"countries1\")\r\n                {\t\t\r\n                    var suggestion = suggestion.trim();\r\n                    setDepartureLocationName(suggestion);\r\n                    var length = suggestion.length;\r\n                    var exact_match = suggestion.substring(length - 4, length-1);\r\n                    exact_match = exact_match.trim();\r\n                    setDeparturelocationcode(exact_match);\r\n                }\r\n                else if(id==\"countries2\")\r\n                {\r\n                    var suggestion = suggestion.trim();\r\n                    setArrivalLocationName(suggestion);\r\n                    var length = suggestion.length;\r\n                    var exact_match = suggestion.substring(length - 4, length-1);\r\n                    exact_match = exact_match.trim();\r\n                    setArrivallocationcode(exact_match);\r\n                }\r\n            } \r\n            async function localSearch() {\r\n                setFetchLoading(true);\r\n                setLocalLoading(true);\r\n                const request = {\r\n                    \"adultCount\": adultCount,\r\n                    \"childCount\": childCount,\r\n                    \"infantCount\":\"0\",\r\n                    \"isDirectFlight\": isDirectFlight,\r\n                    \"isPlusOrMinus3Days\": requestData.isPlusOrMinus3Days,\r\n                    \"searchType\": searchType,\r\n                    \"preferedFlightClass\": preferedFlightClass,\r\n                        \"segments\": [\r\n                        {   \r\n                            \"departureLocationCode\": departureLocationCode,\r\n                            \"departureDate\": dateFormat(departureDate, \"dd-mm-yyyy\"),\r\n                            \"arrivalLocationCode\": arrivalLocationCode,\r\n                            \"returnDate\": searchType == 2 ? dateFormat(returnDate, \"dd-mm-yyyy\") : null,\r\n                            \"departureTime\": requestData.segments[0].departureTime,\r\n                            \"returnTime\": searchType == 2 ? requestData.segments[0].returnTime : null\r\n                        }\r\n                    ],\r\n                    \"paging\": {\r\n                        \"PageIndex\": requestData.paging.PageIndex,\r\n                        \"PageSize\": requestData.paging.PageSize\r\n                    }};\r\n                    const localreq = {\r\n                        \"adultCount\": adultCount,\r\n                        \"childCount\": childCount,\r\n                        \"infantCount\": requestData.infantCount,\r\n                        \"isDirectFlight\": isDirectFlight,\r\n                        \"isPlusOrMinus3Days\": requestData.isPlusOrMinus3Days,\r\n                        \"searchType\": searchType,\r\n                        \"preferedFlightClass\": preferedFlightClass,\r\n                        \"departureLocationName\":departureLocationName,\r\n                        \"arrivalLocationName\":arrivalLocationName,\r\n                            \"segments\": [\r\n                            {   \r\n                                \"departureLocationCode\": departureLocationCode,\r\n                                \"departureDate\": dateFormat(departureDate, \"dd-mm-yyyy\"),\r\n                                \"arrivalLocationCode\": arrivalLocationCode,\r\n                                \"returnDate\": searchType == 2 ? dateFormat(returnDate, \"dd-mm-yyyy\") : null,\r\n                                \"departureTime\": requestData.segments[0].departureTime,\r\n                                \"returnTime\": searchType == 2 ? requestData.segments[0].returnTime : null\r\n                            }\r\n                        ],\r\n                        \"paging\": {\r\n                            \"PageIndex\": requestData.paging.PageIndex,\r\n                            \"PageSize\": requestData.paging.PageSize\r\n                        }};\r\n                        setRequestData(localreq);\r\n                        var response = await getFlights(request);\r\n                        var json = await response;\r\n                        \r\n                        console.log(json);\r\n                        \r\n                        setJsondata(json.data.recommendation);  \r\n                        console.log(\"local JSON: \",jsondata); \r\n                        setFlightData(json.data.recommendation);\r\n                        setLocalLoading(false);\r\n                        setFetchLoading(false);\r\n                    //     var check_nonstop = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '0').length) : 0;\r\n                    //    setnonstop(check_nonstop>0 ? true : false);\r\n                    //     var check_onestop = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '1').length) : 0;\r\n                    //     setonestop(check_onestop>0 ? true : false);\r\n                    //     var check_twostop = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.stopOvers == '2').length) : 0;\r\n                    //     settwostop(check_twostop>0 ? true : false);\r\n                    //     var check_departure1 = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 600 && x.flightLeg[0].flightDetails.departureTime <= 1200).length) : 0;\r\n                    //     setdeparture1(check_departure1>0 ? true: false);\r\n                    //     var check_departure2 = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 1800).length) : 0;\r\n                    //     setdeparture2(check_departure2>0 ? true : false);\r\n                    //     var check_departure3 = jsondata!= undefined ? (jsondata.filter(x => x.flightLeg[0].flightDetails.departureTime >= 1200 && x.flightLeg[0].flightDetails.departureTime <= 1800).length) : 0;\r\n                    //     setdeparture3(check_departure3>0 ? true : false);\r\n                    //     var check_return1 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 600 && x.flightLeg[0].flightDetails.departureTime <= 1200).length) : null) : 0;\r\n                    //     setreturn1(check_return1>0 ? true : false);\r\n                    //     var check_return2 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 1800).length) : null):0;\r\n                    //     setreturn2(check_return2>0 ? true : false);\r\n                    //     var check_return3 = jsondata!= undefined ? (requestData.searchType == 2 ? (jsondata.filter(x => x.flightLeg[1].flightDetails.departureTime >= 1200 && x.flightLeg[0].flightDetails.departureTime <= 1800).length) : null) : 0;\r\n                    //     setreturn3(check_return3>0 ? true : false);                   \r\n                    }\r\n                if(jsondata !== undefined)\r\n                {\r\n                    var currencyCode = flights.flights.data.currencyCode;\r\n                    var total_response = jsondata.length;\r\n                }\r\n            return (\r\n            <Layout>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"bg-img\">\r\n                        <Row className=\"margin-0\">\r\n                            <Col sm={12} style={{ padding: '0'}}>\r\n                                <div className=\"passanger-details\">\r\n                                <Row className='passanger-static'>\r\n                                        <Col xs={12} sm={6} md={8} lg={8} style={{padding: '0'}}>\r\n                                            <div className='d_flex' onClick={() => setFullDrop(!fullDrop)} style={{cursor:'pointer'}}>\r\n                                                <i className='fa fa-search search-circle'></i> \r\n                                                <p className='fromtoplace'>{departureLocationName} &nbsp;&nbsp;- &nbsp;&nbsp;<br />{arrivalLocationName}</p>\r\n                                            </div>\r\n                                            <small style={{position: 'relative', paddingLeft: '55px',top: '-1.5em'}}>{adultCount} traveller &nbsp;&nbsp;| &nbsp;&nbsp;{preferedclassname(preferedFlightClass)}</small>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={3} md={2} lg={2} className=\"text-center\">\r\n                                            <span className='smallText d_flex'>\r\n                                            <img className=\"img_calendar\" src=\"static/images/calendar.svg\" width='20'></img>&nbsp;&nbsp;\r\n                                            {dateFormat(departureDate,\"ddd d,yyyy\")} &nbsp;&nbsp;</span>\r\n                                        </Col>\r\n                                        <Col xs={6} sm={3} md={2} lg={2} className=\"text-center\">\r\n                                            { searchType==2 ? <span className='smallText d_flex'>\r\n                                            <img className=\"img_calendar\" src=\"static/images/calendar.svg\" width='20'></img>&nbsp;&nbsp;\r\n                                            {dateFormat(returnDate,\"ddd d,yyyy\")} </span> : null}\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <div hidden={!fullDrop}>\r\n                                    <Form>\r\n                                    <Row className='fulldrop-panel'>\r\n                                    <div className=\"mb-3\">\r\n                                        <Form.Check name=\"searchType\" defaultValue=\"1\" className='radio_btn' inline label=\"One Way\" type=\"radio\" defaultChecked={searchType == '1'} onClick={handleRadio} id={`inline-radio-2`} />\r\n                                        <Form.Check name=\"searchType\" defaultValue=\"2\" className='radio_btn' inline label=\"Round Trip\" defaultChecked={searchType == '2'} type=\"radio\" onClick={handleRadio} id={`inline-radio-1`} />\r\n                                        {/* <Form.Check name=\"searchType\" defaultValue=\"3\" className='radio_btn' inline label=\"Multi-city\" type=\"radio\" defaultChecked={searchType == '3'} onClick={handlemulti} id={`inline-radio-3`} /> */}\r\n                                    </div>\r\n                                    </Row>\r\n\t\t\t\t\t\t\t\t    <Row style={{color:'white'}}>\r\n\t\t\t\t\t\t\t\t\t<Col md={9} sm={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col md={4} sm={6} className=\"less-padright\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>From</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"select_box2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MyAutosuggest\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"countries1\"\r\n                                                        onChange={onChangeLocation}\r\n                                                        value={departureLocationName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{departure_err ? (<i className=\"err-msg\">Departure Location required</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='checkbox-custom'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div  className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check name=\"add_near_airport\" inline label=\"Add Nearby Airports\" type=\"checkbox\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col md={4} sm={6} className=\"less-padleft less-padright\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>To</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"select_box2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MyAutosuggest\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"countries2\"\t\r\n                                                        onChange = {onChangeLocation}\t\r\n                                                        value={arrivalLocationName}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{arrival_err ? (<i className=\"err-msg\">Arrival Location required</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n                                                <div className='checkbox-custom'>\r\n                                                    <div className=\"mb-3\">\r\n                                                        <Form.Check name=\"add_near_airport\" inline label=\"Add Nearby Airports\" type=\"checkbox\"/>\r\n                                                    </div>\r\n                                                </div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col md={4} sm={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} md={6} className=\"less-padleft less-padright\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Departure</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"date\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <i className=\"fa fa-calendar\"> </i>  */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"departureDate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowMonthDropdown \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowYearDropdown \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected={departureDate} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminDate={moment().toDate()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handlestartChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{departureDate_err ? (<i className=\"err-msg\">Departure date is required</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} className=\"less-padleft less-padright\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1s\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Return</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{searchType == 2 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"date\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <i className=\"fa fa-calendar\"> </i>  */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"returnDate\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowMonthDropdown \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowYearDropdown \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected={returnDate} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminDate={new Date(departureDate)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleendChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{returnDate_err ? (<i className=\"err-msg\">Return date is required</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"date-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(One way)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t<Col md={3} sm={4} className=\"less-padleft\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Cabin Class & Travellers</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<div ref={node} className=\"traveldet-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={handlepopup} style={{width:'100%'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"popup\">{adultCount} Adult, {preferedclassname(preferedFlightClass)}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t{popup && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"traveldet-popdown\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col md={12} sm={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"label-dark\">Cabin class</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"\" style={{float:'right',color:'#17d8cf'}} onClick={()=>setPopup(false)}><i className=\"fa fa-times\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"select_box\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"oneway_preferedFlightClass\" onChange={changeClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">Any</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">Business</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">Economy</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"4\">First Class</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"5\">PremiumOrEconomy</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"6\">PremiumAndEconomy</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"label-dark\">Adults</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NumericInput mobile name=\"adultCount\" className=\"number-input form-control\" value={adultCount} min={1} max={9} step={1} onChange={adultChanged}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{adults_err ? (<i className=\"err-msg red-err\">Put value between 1-9</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"agelimit-text\">16+ years</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label className=\"label-dark\">Children</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"arrow\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NumericInput mobile name=\"childCount\" className=\"number-input form-control\" value={childCount} min={0} max={9} step={1} onChange={childChanged}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{child_err ? (<i className=\"err-msg red-err\">Put value between 0-9</i>): null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={6} xs={6}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"agelimit-text\">0-15 years</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={12}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"age-instr\">Your age at time of travel must be valid for the age category booked. Airlines have restrictions on under 18s travelling alone.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br/>Age limits and policies fo\tr travelling with children may vary so please check with the airline before booking.</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col sm={12} className=\"text-right\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"label-skyblue\" onClick={() => setPopup(false)}>Done</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t<Col lg={12} md={12}>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='checkbox-custom'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3 right\">\r\n                                                        <Form.Check name=\"isDirectFlight\" label=\"Direct Flight Only\" type=\"checkbox\" value=\"false\" defaultChecked={isDirectFlight} onClick={changedirectFlight}/>                                                        \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"form-control search-btnmargin\" variant=\"danger\" disabled={fetchLoading} onClick={localSearch}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{fetchLoading && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-refresh fa-spin\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"5px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{fetchLoading && <span>Please wait!</span>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{!fetchLoading && <span>SEARCH FLIGHTS</span>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n                                </Form>\r\n                                </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    {/* Filtering component */}\r\n                    { jsondata != undefined ?\r\n                    <div className=\"mobile-filterscreen\">\r\n                        <div className=\"visible-xs filter-mobile\">\r\n                            <Row className=\"filtering-row\">\r\n                                {/* <Col sm={6} xs={6} lg={6} style={{ borderRight: '1px solid #FF4057' }}>\r\n                                    <span onClick={handlesortToggler} className=\"mob-togglehead\">Sort </span>\r\n                                </Col> */}\r\n                                <Col sm={12} xs={12} lg={12} className=\"text-center\">\r\n                                    <span onClick={handleFilterToggler} className=\"mob-togglehead\">Filter </span>\r\n                                </Col>\r\n                            </Row>\r\n                        </div> \r\n\r\n                        {filterToggler ?\r\n                        <div className=\"datas\"> \r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <p>\r\n                                        <span className=\"bold-text\">Filter by:</span>\r\n                                        <Button variant=\"outline-danger\" style={{ float: 'right' }} onClick={() => { setSortToggler(false); setFilterToggler(false);setFilterToggler(false); }}>Done</Button>\r\n                                    </p>\r\n                                    <br/>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <p className='small_txt'>\r\n                                                <b>Stops</b>\r\n                                                {/* <small className=\"pink-text\" style={{ float: 'right' }}>Reset</small> */}\r\n                                            </p>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                    <div className='checkbox-custom'>\r\n                                                        <Form.Check type=\"checkbox\" label=\"Non-stop\" name=\"stop1\" value={nonstop} onClick={filternonstop} defaultChecked={nonstop}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"1stop\" name=\"stop2\" value={onestop}  onClick={filteronestop} defaultChecked={onestop}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"2 Stops\" name=\"stop3\" value={twostop}  onClick={filtertwostop} defaultChecked={twostop} />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={12}>\r\n                                            <p className='small_txt'>\r\n                                                <b>Departure from <span className=\"filter-cname\">{filtercname(requestData.departureLocationName)}</span></b> \r\n                                                {/* <small className=\"pink-text\" style={{ float: 'right' }}>Reset</small> */}\r\n                                            </p> \r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                    <div className='checkbox-custom'>\r\n                                                        <Form.Check type=\"checkbox\" label=\"6AM - 12 Noon\" value={departure1}  onClick={filterdeparture1} defaultChecked={departure1}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"After 6PM\" value={departure2}  onClick={filterdeparture2} defaultChecked={departure2}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"12 Noon - 6PM\" value={departure3}  onClick={filterdeparture3} defaultChecked={departure3}/>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        {requestData.searchType == 2 ? \r\n                                        <Col xs={12}>\r\n                                            <p className='small_txt'>\r\n                                                <b>Departure from <span className=\"filter-cname\">{filtercname(requestData.arrivalLocationName)}</span></b>\r\n                                                {/* <small className=\"pink-text\" style={{ float: 'right' }}>Reset</small> */}\r\n                                            </p>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                    <div className='checkbox-custom'>\r\n                                                        <Form.Check type=\"checkbox\" label=\"6AM - 12 Noon\" value={return1}  onClick={filterreturn1} defaultChecked={return1}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"After 6PM\" value={return2}  onClick={filterreturn2} defaultChecked={return2}/>\r\n                                                        <Form.Check type=\"checkbox\" label=\"12 Noon - 6PM\" value={return3}  onClick={filterreturn3} defaultChecked={return3}/>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col> : null }\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <p className='small_txt'>\r\n                                                <b>Airlines</b>\r\n                                            </p>\r\n                                        </Col>\r\n                                        <Col xs={12}>\r\n                                            <Row>\r\n                                                <Col xs={12}>\r\n                                                   <div className='checkbox-custom'>\r\n                                                       { total_response > 0 && jsondata != undefined ?\r\n                                                        <div>{uniqueAirlines().map((airname,i=1) => <Form.Check type=\"checkbox\" value={airname} label={airname} key={i} defaultChecked={airlineName != airname || airlinesCheck} onClick={() => filterAirline(airname)}/>)} </div> : null }\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </div> : null}\r\n                    </div>: null }\r\n                    {/* ---------------- end for mobile ---------------- */}\r\n\r\n                    {/* ----------- Desktop Filters, Datas and Ad.. -----------  */}\r\n                    {/* ---------------- Desktop Filter Datas ---------------- */}\r\n                    {localLoading ? <div className=\"text-center\"><img src=\"static/images/loader1.gif\" height=\"50\" width=\"100\"/><br/>Loading</div> : <div>\r\n                    {jsondata!== undefined ?\r\n                    <div className='filter-data'>\r\n                        <div className = 'container-fluid'>\r\n                            <Row>\r\n                                <Col sm={12} md={12} lg={10} xl={10}>\r\n                                    <Row>\r\n                                        {/* Filter Datas */}\r\n                                        <Col sm={12} md={3} className=\"hidden-xs\">\r\n                                            <div className='filter_Set'>\r\n                                                <p className='small_txt'>\r\n                                                    <b>Stops</b>\r\n                                                    <small className=\"pink-text\" style={{ float: 'right' }}>\r\n                                                        {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" ></i> */}\r\n\r\n                                                    </small>\r\n                                                </p>\r\n                                                <Row>\r\n                                                    <Col xs={12}>\r\n                                                        <div className='checkbox-custom'>\r\n                                                            <Form.Check type=\"checkbox\" label=\"Non-stop\" name=\"stop1\" value={nonstop}  onClick={filternonstop} defaultChecked={nonstop}/>\r\n                                                            <Form.Check type=\"checkbox\" label=\"1 Stop\" name=\"stop2\" value={onestop}  onClick={filteronestop} defaultChecked={onestop} />\r\n                                                            <Form.Check type=\"checkbox\" label=\"2 Stops\" name=\"stop3\" value={twostop}  onClick={filtertwostop} defaultChecked={twostop}  />\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            <div className='filter_Set'>\r\n                                                <p className='small_txt'>\r\n                                                    <b>Departure from <span className=\"filter-cname\">{filtercname(departureLocationName)}</span></b> \r\n                                                    <small className=\"pink-text\" style={{ float: 'right' }}>\r\n                                                    {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" ></i> */}\r\n                                                    </small>\r\n                                                </p>\r\n                                                <Row>\r\n                                                    <Col xs={12}>\r\n                                                        <div className='checkbox-custom'>\r\n                                                            <Form.Check type=\"checkbox\" label=\"6 AM - 12 Noon\" value={departure1}  onClick={filterdeparture1} defaultChecked={departure1}/>\r\n                                                            <Form.Check type=\"checkbox\" label=\"After 6 PM\" value={departure2}  onClick={filterdeparture2} defaultChecked={departure2}/>\r\n                                                            <Form.Check type=\"checkbox\" label=\"12 Noon - 6 PM\" value={departure3}  onClick={filterdeparture3} defaultChecked={departure3}/>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            {requestData.searchType == 2 ?\r\n                                            <div className='filter_Set'>\r\n                                                <p className='small_txt'>\r\n                                                    <b>Departure from <span className=\"filter-cname\">{filtercname(arrivalLocationName)}</span></b>\r\n                                                    <small className=\"pink-text\" style={{ float: 'right' }}>\r\n                                                    {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" ></i> */}\r\n                                                    </small>\r\n                                                </p>\r\n                                                <Row>\r\n                                                    <Col xs={12}>\r\n                                                        <div className='checkbox-custom'>\r\n                                                            <Form.Check type=\"checkbox\" label=\"6 AM - 12 Noon\" value={return1}  onClick={filterreturn1} defaultChecked={return1}/>\r\n                                                            <Form.Check type=\"checkbox\" label=\"After 6 PM\" value={return2}  onClick={filterreturn2} defaultChecked={return2}/>\r\n                                                            <Form.Check type=\"checkbox\" label=\"12 Noon - 6 PM\" value={return3}  onClick={filterreturn3} defaultChecked={return3}/>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div> : null }\r\n                                            <div className='filter_Set'>\r\n                                                <p className='small_txt'>\r\n                                                    <b>Airlines</b>\r\n                                                    <small className=\"pink-text\" style={{ float: 'right' }}>\r\n                                                    {/* <i className=\"fa fa-angle-down\" aria-hidden=\"true\" ></i> */}\r\n                                                    </small>\r\n                                                </p>\r\n                                                <Row>\r\n                                                    <Col xs={12}>\r\n                                                    <div className='checkbox-custom'>\r\n                                                       { jsondata != undefined && total_response > 0 ?\r\n                                                        <div>{uniqueAirlines().map((airname,i=1) => <Form.Check type=\"checkbox\" value={airname} label={airname} key={i} defaultChecked={airlineName != airname || airlinesCheck} onClick={() => filterAirline(airname)}/>)} </div> : null }\r\n                                                    </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Col>\r\n                                        {/* ------ Main Datas ------ */}\r\n                                        {total_response > 0 ? \r\n                                        <Col sm={12} md={9}>\r\n                                            \r\n                                            {/* Sorting Title */}\r\n                                            <Row>\r\n                                                <Col lg={7} md={7} sm={5} xs={6}>\r\n                                                    <p>{total_response} results sorted by <b>{sortOption}</b></p>\r\n                                                </Col>\r\n                                                <Col lg={5} md={5} sm={6} xs={6} className='text-right'>                                                    \r\n                                                        <div className=\"select_box outline\"  style={{ float: 'right' }}>\r\n                                                            <Form.Control as=\"select\" name=\"sortoptions\" defaultValue={sortOption} onChange={handleSortOptions}>\r\n                                                                <option value=\"0\" hidden>Sort by</option>\r\n                                                                <option value=\"Best\">Best</option>\r\n                                                                <option value=\"Cheapest First\">Cheapest First</option>\r\n                                                                <option value=\"Fastest First\">Fastest First</option>\r\n                                                                <option value=\"Outbound: Departure Time\">Outbound: Departure Time</option>\r\n                                                                <option value=\"Airline\">Airline</option>\r\n                                                                <option value=\"Stops\">Stops</option>\r\n                                                            </Form.Control>\r\n                                                        </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            {/* Filter Sorting Best, Cheapest, Fastest */}\r\n                                            <div className='filter_sort'>\r\n                                                <Row>\r\n                                                    <Col xs={4} sm={4} className={sortOption == \"Best\" ? 'filter_tab text-center active' : 'filter_tab text-center'} data-tip data-for='best'>\r\n                                                        <p onClick={handleSortBest}>Best<br></br>\r\n                                                        <b>{getSymbolFromCurrency(currencyCode)} {bestPrice()}</b>\r\n                                                        <br></br>{bestDuration()}</p>\r\n                                                    </Col>\r\n                                                    <ReactTooltip id='best' place=\"top\" type=\"light\" effect=\"solid\" aria-haspopup='true' role='example' className='tool'>\r\n                                                        <p>We think these flights offer the best combination of <br></br><b>price</b> and <b>speed</b>. We may also consider factors like <br></br>number of stops and mount of hassle.</p>\r\n                                                    </ReactTooltip>\r\n                                                    <Col xs={4} sm={4} className={sortOption == \"Cheapest First\" ? 'filter_tab text-center active' : 'filter_tab text-center'} data-tip data-for='cheapest'>\r\n                                                        <p onClick={handleSortCheapest}>Cheapest<br></br>\r\n                                                        <b>{getSymbolFromCurrency(currencyCode)} {cheapestPrice()}</b>\r\n                                                        <br></br>{cheapestDuration()}</p>\r\n                                                    </Col>\r\n                                                    <ReactTooltip id='cheapest' place=\"top\" type=\"light\" effect=\"solid\" aria-haspopup='true' role='example' className='tool'>\r\n                                                        <p>Sort by Cheatpest Price.</p>\r\n                                                    </ReactTooltip>\r\n                                                    <Col xs={4} sm={4} className={sortOption == \"Fastest First\" ? 'filter_tab text-center active' : 'filter_tab text-center'} data-tip data-for='fastest'>\r\n                                                        <p onClick={handleSortFastest}>Fastest<br></br>\r\n                                                        <b>{getSymbolFromCurrency(currencyCode)} {fastestPrice()} </b>\r\n                                                        <br></br>{fastestDuration()}</p>\r\n                                                    </Col>\r\n                                                    <ReactTooltip id='fastest' place=\"top\" type=\"light\" effect=\"solid\" aria-haspopup='true' role='example' className='tool'>\r\n                                                        <p>Sort by Shortest Duration.</p>\r\n                                                    </ReactTooltip>\r\n                                                </Row>\r\n                                            </div>\r\n\r\n                                            {/* Common for sorting datas */}\r\n                                            <div className='custom-container'>\r\n                                                <div className='container' style={{padding: '0'}}>\r\n                                                    <div className=\"sort-title d_flex\">\r\n                                                        <Row>\r\n                                                            <Col xs={8} sm={8}>\r\n                                                                <h3 className=\"bold-text\">Smart value Flights</h3>\r\n                                                                <p>Popularity based on customer preference, duration & price</p>\r\n                                                            </Col>\r\n                                                            <Col xs={4} sm={4} className=\"text-right\" style={{borderLeft: '1px solid #d5cece'}}>\r\n                                                                <div className=\"topright-price\">\r\n                                                                    <big><span className=\"pink-text\">Chepeast Starting at</span></big>\r\n                                                                    <br />\r\n                                                                    <span className=\"top-currency\">\r\n                                                                        {getSymbolFromCurrency(currencyCode)}\r\n                                                                         &nbsp;{cheapestPrice()}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* End common title */}\r\n                                            {/* Start ------------------------------------------------------------ */}\r\n                                            {/* Sorting Area */}\r\n                                            {jsondata.map((resultData, i = 1) => (\r\n                                                <Row className=\"sort-box\" key={resultData.recommendationRefNo}>\r\n                                                    <Col sm={9} style = {{ padding: '10px', borderRight: '1px dashed #03A9F4' }}>\r\n                                                        {resultData.totalFare == cheapestPrice() ? <button className=\"pink-button cheap\">CHEAPEST</button> : <button className=\"pink-button cheap\">VALUE FOR MONEY</button>}\r\n                                                        {/* Departure flights */}\r\n                                                        <Row className=\"travel-timing\" style={{ marginTop: '6px' }}>\r\n                                                            <Col md={12} sm={12}>\r\n                                                                <b>Departure</b> | {dateFormat(changeMonthDate(resultData.flightLeg[0].flightDetails.departureDate), \"ddd, mmm d\")} | {resultData.flightLeg[0].flightDetails.operatingAirlineName}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col xs={3} sm={4} className = ''>\r\n                                                                <p className=\"sort-countryname\">{resultData.marketingAirlineNames}</p>\r\n                                                            </Col>\r\n                                                            <Col xs={9} sm={8} className=\"flight-details\">\r\n                                                                <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <div className=\"start-time text-right\" htmlFor={`test` + i}>\r\n                                                                            {TimeSplit(resultData.flightLeg[0].flightDetails.departureTime)}\r\n                                                                            <p className=\"mini-text\">{resultData.flightLeg[0].flightDetails.departureLocationCode}</p>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col xs={4} className='text-center'>\r\n                                                                        <div className='hrs'>\r\n                                                                            <span className=\"mini-text\">{CalculateDuration(resultData.flightLeg[0].flightDetails.totalFlyingHours)}</span>\r\n                                                                            <span className=\"line_jet\"></span>\r\n                                                                            <span className={StopClassName(resultData.flightLeg[0].flightDetails.stopOvers)}></span>\r\n                                                                            <span className=\"mini-text sky-text\">{StopName(resultData.flightLeg[0].flightDetails.stopOvers)} {resultData.flightLeg[0].flightDetails.stopOvers > 0 ? <span> via <span className=\"via-city\">{ViaCityName(resultData.flightLeg[0].flightDetails.connectingFlightDetails[0].arrivalLocationName)}</span> </span>: null }</span>\r\n                                                                            <img className=\"fa fa-fighter-jet autocomplete-flight-img\" alt=\"Flight\" src=\"static/images/flight.png\" width=\"16px\" />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col xs={4}>\r\n                                                                        <div className=\"start-time\">\r\n                                                                            {TimeSplit(resultData.flightLeg[0].flightDetails.arrivalTime)}\r\n                                                                            <p className=\"mini-text\">{resultData.flightLeg[0].flightDetails.arrivalLocationCode}</p>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        {/* End Departure Flights */}\r\n                                                        {/* Return Flights */}\r\n                                                        {requestData.searchType == 2 ? <div>\r\n                                                        <Row className=\"travel-timing\" style={{ marginTop: '6px' }}>\r\n                                                            <Col md={12} sm={12}>\r\n                                                                <b>Return</b> | {dateFormat(changeMonthDate(resultData.flightLeg[1].flightDetails.departureDate), \"ddd, mmm d\")} | {resultData.flightLeg[1].flightDetails.operatingAirlineName}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col xs={3} sm={4} className = ''>\r\n                                                                <p className=\"sort-countryname\">{resultData.marketingAirlineNames}</p>\r\n                                                            </Col>\r\n                                                            <Col xs={9} sm={8} className=\"flight-details\">\r\n                                                                <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <div className=\"start-time text-right\" htmlFor={`test` + i}>\r\n                                                                            {TimeSplit(resultData.flightLeg[1].flightDetails.departureTime)}\r\n                                                                            <p className=\"mini-text\">{resultData.flightLeg[1].flightDetails.departureLocationCode}</p>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col xs={4} className='text-center'>\r\n                                                                        <div className='hrs'>\r\n                                                                            <span className=\"mini-text\">{CalculateDuration(resultData.flightLeg[1].flightDetails.totalFlyingHours)}</span>\r\n                                                                            <span className=\"line_jet\"></span>\r\n                                                                            <span className={StopClassName(resultData.flightLeg[1].flightDetails.stopOvers)}></span>\r\n                                                                            <span className=\"mini-text sky-text\">{StopName(resultData.flightLeg[1].flightDetails.stopOvers)}{resultData.flightLeg[1].flightDetails.stopOvers > 0 ? <span> via <span className=\"via-city\">{ViaCityName(resultData.flightLeg[1].flightDetails.connectingFlightDetails[0].arrivalLocationName)}</span> </span>: null }</span>\r\n                                                                            <img className=\"fa fa-fighter-jet autocomplete-flight-img\" alt=\"Flight\" src=\"static/images/flight.png\" width=\"16px\" />\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                    <Col xs={4}>\r\n                                                                        <div className=\"start-time\">\r\n                                                                            {TimeSplit(resultData.flightLeg[1].flightDetails.arrivalTime)}\r\n                                                                            <p className=\"mini-text\">{resultData.flightLeg[1].flightDetails.arrivalLocationCode}</p>\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Col>\r\n                                                        </Row> </div> : null }\r\n                                                        {/* End Return Flights */}\r\n                                                    </Col>\r\n                                                    <Col sm={3} className='text-center set_bg'>\r\n                                                        <span className=\"sort-currency\">\r\n                                                            <span className=\"deals_no\">\r\n                                                                8 deals\r\n                                                            </span><br/>\r\n                                                            {getSymbolFromCurrency(currencyCode)}\r\n                                                            &nbsp;{resultData.totalFare}\r\n                                                        </span>\r\n                                                        {/* <a href={`/ticketdetails?id=${2}`}>\r\n                                                            <button className=\"bpk-button\">Select <i className=\"fa fa-arrow-right\"></i></button>\r\n                                                        </a> */}\r\n                                                        {/* <Link href={{ pathname: 'ticketdetails', query: { id: resultData.recommendationRefNo }}}> */}\r\n                                                        {/* <button className=\"bpk-button\" onClick={() => showFlightDetails(resultData.recommendationRefNo)}>Select <i className=\"fa fa-arrow-right\"></i></button> */}\r\n                                                        <Button className=\"bpk-button\" onClick={() => showFlightDetails(resultData.recommendationRefNo)} disabled={resultData.recommendationRefNo == flightId ? fetchLoading : null}>\r\n                                                        {resultData.recommendationRefNo == flightId ? \r\n                                                        fetchLoading1 && (\r\n                                                            <i\r\n                                                            className=\"fa fa-refresh fa-spin\"\r\n                                                            style={{ marginRight: \"5px\" }}\r\n                                                            />\r\n                                                        ) : null}\r\n                                                        {resultData.recommendationRefNo == flightId ? fetchLoading1 && <span>Loading</span> : null}\r\n                                                        {resultData.recommendationRefNo == flightId ? !fetchLoading1 && <span>Select</span> : <span>Select</span>}\r\n                                                        </Button>\r\n                                                        {/* </Link> */}\r\n                                                    </Col>\r\n                                                    <Row className=\"flight-details\">\r\n                                                        <Col sm={12} className=\"text-center grey\">\r\n                                                            <span>Cabin Baggage Only Flights</span>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"flight-details bottom\">\r\n                                                        <Col sm={8} xs={7}>\r\n                                                            <p>\r\n                                                                <i className=\"fa fa-star\"></i>\r\n                                                                <b className='green-text'>8.5<small>/10</small></b>\r\n                                                                <span className=\"\"> Non-refundable</span>\r\n                                                                <i className=\"fa fa-angle-down\" aria-hidden=\"true\" ></i> | \r\n                                                                <span>Seat varies by flight segment</span>\r\n                                                            </p>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Row>\r\n                                            ))}\r\n                                            {/* Ending Sorting Area */}\r\n\r\n                                                        </Col> : <center>No data found</center>  }\r\n                                       {/* --------End main datas------- */}\r\n                                    </Row>\r\n                                </Col>\r\n                                \r\n                                {/* Ad */}\r\n                                <Col sm={12} md={12} lg={2} xl={2} className='text-center'>\r\n                                    <Row>\r\n                                        <Col md={4} lg={12}>\r\n                                            <div className=\"ad-block\">\r\n                                                <p>Place for ad</p>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md={4} lg={12}>\r\n                                            <div className=\"ad-block\">\r\n                                                <p>Place for ad</p>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md={4} lg={12}>\r\n                                            <div className=\"ad-block\">\r\n                                                <p>Place for ad</p>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </div> \r\n                    </div>: <div className=\"nodata-msg text-center\">\r\n                            <img src=\"static/images/nodata2.png\" className=\"img img-responsive\" style={{height:'200px',width:'250px'}}></img>\r\n                            {/* <img className=\"fa fa-fighter-jet autocomplete-flight-img\" alt=\"Flight\" src=\"static/images/flight.png\" style={{height:'70px',width:'70px',opacity:0.2}}/> */}\r\n                            {/* <br/>Sorry! No result found. */}\r\n                            </div> } </div> }\r\n                </div>\r\n            </Layout>\r\n        )\r\n}\r\n\r\nTicketBooking.getInitialProps = async ({ query: {adultCount,childCount,infantCount,isDirectFlight,isPlusOrMinus3Days,searchType,preferedFlightClass,departureLocationCode,departureDate,arrivalLocationCode,returnDate,departureTime,returnTime,PageIndex,PageSize,departureLocationName,arrivalLocationName } }) => {\r\nconst request = {\r\n    \"adultCount\": adultCount,\r\n    \"childCount\": childCount,\r\n    \"infantCount\": infantCount,\r\n    \"isDirectFlight\": isDirectFlight,\r\n    \"isPlusOrMinus3Days\": isPlusOrMinus3Days,\r\n    \"searchType\": searchType,\r\n    \"preferedFlightClass\": preferedFlightClass,\r\n        \"segments\": [\r\n        {\r\n            \"departureLocationCode\": departureLocationCode,\r\n            \"departureDate\": departureDate,\r\n            \"arrivalLocationCode\": arrivalLocationCode,\r\n            \"returnDate\": searchType == 2 ? returnDate : null,\r\n            \"departureTime\": departureTime,\r\n            \"returnTime\": searchType == 2 ? returnTime : null\r\n        }\r\n    ],\r\n    \"paging\": {\r\n        \"PageIndex\": PageIndex,\r\n        \"PageSize\": PageSize\r\n    }};\r\n\r\n    const res = await getFlights(request)\r\n    const json = await res;\r\n    return { \r\n        flights: json,\r\n        request: { \r\n            \"adultCount\": adultCount,\r\n            \"childCount\": childCount,\r\n            \"infantCount\": infantCount,\r\n            \"isDirectFlight\": isDirectFlight,\r\n            \"isPlusOrMinus3Days\": isPlusOrMinus3Days,\r\n            \"searchType\": searchType,\r\n            \"preferedFlightClass\": preferedFlightClass,\r\n            \"departureLocationName\": departureLocationName,\r\n            \"arrivalLocationName\": arrivalLocationName,\r\n                \"segments\": [\r\n                {\r\n                    \"departureLocationCode\": departureLocationCode,\r\n                    \"departureDate\": departureDate,\r\n                    \"arrivalLocationCode\": arrivalLocationCode,\r\n                    \"returnDate\": searchType == 2 ? returnDate : null,\r\n                    \"departureTime\": departureTime,\r\n                    \"returnTime\": searchType == 2 ? returnTime : null\r\n                }\r\n            ],\r\n            \"paging\": {\r\n                \"PageIndex\": PageIndex,\r\n                \"PageSize\": PageSize\r\n            }\r\n        }\r\n        }\r\n        }\r\n\r\n  export default TicketBooking;"],"mappings":"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A;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAFA;AAulWA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAkWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAKA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAXA;AAAA;AACA;AADA;AAeA;AAfA;AAAA;AACA;AADA;AAgBA;AAhBA;AAAA;AACA;AADA;AAiBA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlWA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAwXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAC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A;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAaA;AAbA;AAAA;AACA;AADA;AAcA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjhBA;AAAA;AACA;AAmiBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtnBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAsnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AAlBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AApBA;AAwBA;AAjDA;AAAA;AACA;AADA;AAkDA;AAlDA;AAAA;AACA;AADA;AAmDA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtnBA;AAAA;AACA;AAosecatHA;AA8HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AAlBA;AADA;AAAA;AACA;AADA;AAwBA;AAxBA;AAAA;AACA;AADA;AAyBA;AAzBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AApBA;AAFA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAuDA;;;;A","sourceRoot":""}